% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layers.R
\name{compute_tf_network}
\alias{compute_tf_network}
\title{Compute TF network}
\usage{
compute_tf_network(
  hummus = null,
  organism = 9606,
  tfs = NA,
  gene_assay = NULL,
  store_network = FALSE,
  output_file = NULL,
  source_target = "AND",
  only_expressed = TRUE,
  multiplex_name = NULL,
  tf_network_name = "TF_network",
  verbose = 1
)
}
\arguments{
\item{organism}{(integer)  - Specie identifier from Omnipath to fetch specific interactions}

\item{tfs}{vector(character) - List of tfs considered.}

\item{store_network}{(bool) - Save the network directly (\code{TRUE},
default) or return without saving on disk (\code{FALSE}).}

\item{output_file}{(character) - Name of the output_file (if store_network == \code{TRUE}).}

\item{source_target}{('AND'|'OR') - Fetch only the interactions involving
two considered tfs (\code{'AND'}), or one considered tfs and any other element (\code{'OR'})}
}
\value{
(data.frame) - Return list of network interactions between tfs (or larger set of protein if source_target==\code{'OR'})
}
\description{
Compute a protein-protein interaction layer from Omnipath request that will represent tf cooperativity.
This network is the top-layer of HuMMuS multilayer.
}
\examples{
TO DO. Same than UNIT test.
}
